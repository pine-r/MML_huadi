<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.java.mapper.PayMapper" >
  <resultMap id="BaseResultMap" type="cn.java.entity.Pay" >
    <id column="pay_id" property="payId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_num" property="orderNum" jdbcType="BIGINT" />
    <result column="pay_platform" property="payPlatform" jdbcType="INTEGER" />
    <result column="platform_number" property="platformNumber" jdbcType="VARCHAR" />
    <result column="platform_status" property="platformStatus" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    pay_id, user_id, order_num, pay_platform, platform_number, platform_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pay
    where pay_id = #{payId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pay
    where pay_id = #{payId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.java.entity.Pay" >
    insert into pay (pay_id, user_id, order_num, 
      pay_platform, platform_number, platform_status
      )
    values (#{payId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderNum,jdbcType=BIGINT}, 
      #{payPlatform,jdbcType=INTEGER}, #{platformNumber,jdbcType=VARCHAR}, #{platformStatus,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.java.entity.Pay" >
    insert into pay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="payId != null" >
        pay_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="payPlatform != null" >
        pay_platform,
      </if>
      <if test="platformNumber != null" >
        platform_number,
      </if>
      <if test="platformStatus != null" >
        platform_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="payId != null" >
        #{payId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=BIGINT},
      </if>
      <if test="payPlatform != null" >
        #{payPlatform,jdbcType=INTEGER},
      </if>
      <if test="platformNumber != null" >
        #{platformNumber,jdbcType=VARCHAR},
      </if>
      <if test="platformStatus != null" >
        #{platformStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.java.entity.Pay" >
    update pay
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=BIGINT},
      </if>
      <if test="payPlatform != null" >
        pay_platform = #{payPlatform,jdbcType=INTEGER},
      </if>
      <if test="platformNumber != null" >
        platform_number = #{platformNumber,jdbcType=VARCHAR},
      </if>
      <if test="platformStatus != null" >
        platform_status = #{platformStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where pay_id = #{payId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.java.entity.Pay" >
    update pay
    set user_id = #{userId,jdbcType=INTEGER},
      order_num = #{orderNum,jdbcType=BIGINT},
      pay_platform = #{payPlatform,jdbcType=INTEGER},
      platform_number = #{platformNumber,jdbcType=VARCHAR},
      platform_status = #{platformStatus,jdbcType=VARCHAR}
    where pay_id = #{payId,jdbcType=INTEGER}
  </update>
</mapper>